{"ast":null,"code":"var _jsxFileName = \"/Users/hiuchunchan/Downloads/4601project/sun/sunpo/src/This.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, useParams, useRouteMatch } from \"react-router-dom\"; // Since routes are regular React components, they\n// may be rendered anywhere in the app, including in\n// child elements.\n//\n// This helps when it's time to code-split your app\n// into multiple bundles because code-splitting a\n// React Router app is the same as code-splitting\n// any other React app.\n\nexport default function NestingExample() {\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Home\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/topics\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Topics\"))), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Home, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/topics\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Topics, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })))));\n}\n\nfunction Home() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Home\"));\n}\n\nfunction Topics() {\n  // The `path` lets us build <Route> paths that are\n  // relative to the parent route, while the `url` lets\n  // us build relative links.\n  let {\n    path,\n    url\n  } = useRouteMatch();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Topics\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `${url}/rendering`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Rendering with React\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `${url}/components`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Components\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `${url}/props-v-state`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Props v. State\"))), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Please select a topic.\")), React.createElement(Route, {\n    path: `${path}/:topicId`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Topic, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }))));\n}\n\nfunction Topic() {\n  // The <Route> that rendered this component has a\n  // path of `/topics/:topicId`. The `:topicId` portion\n  // of the URL indicates a placeholder that we can\n  // get from `useParams()`.\n  let {\n    topicId\n  } = useParams();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, topicId));\n}","map":{"version":3,"sources":["/Users/hiuchunchan/Downloads/4601project/sun/sunpo/src/This.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","useParams","useRouteMatch","NestingExample","Home","Topics","path","url","Topic","topicId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n  useRouteMatch\n} from \"react-router-dom\";\n\n// Since routes are regular React components, they\n// may be rendered anywhere in the app, including in\n// child elements.\n//\n// This helps when it's time to code-split your app\n// into multiple bundles because code-splitting a\n// React Router app is the same as code-splitting\n// any other React app.\n\nexport default function NestingExample() {\n  return (\n    <Router>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/topics\">Topics</Link>\n          </li>\n        </ul>\n\n        <hr />\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/topics\">\n            <Topics />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return (\n    <div>\n      <h2>Home</h2>\n    </div>\n  );\n}\n\nfunction Topics() {\n  // The `path` lets us build <Route> paths that are\n  // relative to the parent route, while the `url` lets\n  // us build relative links.\n  let { path, url } = useRouteMatch();\n\n  return (\n    <div>\n      <h2>Topics</h2>\n      <ul>\n        <li>\n          <Link to={`${url}/rendering`}>Rendering with React</Link>\n        </li>\n        <li>\n          <Link to={`${url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${url}/props-v-state`}>Props v. State</Link>\n        </li>\n      </ul>\n\n      <Switch>\n        <Route exact path={path}>\n          <h3>Please select a topic.</h3>\n        </Route>\n        <Route path={`${path}/:topicId`}>\n          <Topic />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction Topic() {\n  // The <Route> that rendered this component has a\n  // path of `/topics/:topicId`. The `:topicId` portion\n  // of the URL indicates a placeholder that we can\n  // get from `useParams()`.\n  let { topicId } = useParams();\n\n  return (\n    <div>\n      <h3>{topicId}</h3>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}