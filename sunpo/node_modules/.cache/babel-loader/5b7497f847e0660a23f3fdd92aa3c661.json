{"ast":null,"code":"/**\n * @hidden\n */\nexport var focusFirstFocusableChild = function (element) {\n  if (element) {\n    // should focus wrapper if it's focusable in future versions\n    var elements = element.querySelectorAll('input, [tabindex]:not([tabindex=\"-1\"])');\n\n    if (elements.length && elements[0].focus) {\n      elements[0].focus();\n    }\n  }\n};","map":{"version":3,"sources":["../../src/focus.ts"],"names":[],"mappings":"AAAA;;;AAGA,OAAO,IAAM,wBAAwB,GAAG,UAAC,OAAD,EAAa;AACjD,MAAI,OAAJ,EAAa;AACT;AACA,QAAM,QAAQ,GAAG,OAAO,CAAC,gBAAR,CAAyB,wCAAzB,CAAjB;;AACA,QAAI,QAAQ,CAAC,MAAT,IAAoB,QAAQ,CAAC,CAAD,CAAR,CAAoB,KAA5C,EAAmD;AAC9C,MAAA,QAAQ,CAAC,CAAD,CAAR,CAAoB,KAApB;AACJ;AACJ;AACJ,CARM","sourceRoot":"","sourcesContent":["/**\n * @hidden\n */\nexport var focusFirstFocusableChild = function (element) {\n    if (element) {\n        // should focus wrapper if it's focusable in future versions\n        var elements = element.querySelectorAll('input, [tabindex]:not([tabindex=\"-1\"])');\n        if (elements.length && elements[0].focus) {\n            elements[0].focus();\n        }\n    }\n};\n//# sourceMappingURL=focus.js.map"]},"metadata":{},"sourceType":"module"}