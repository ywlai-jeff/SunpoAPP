import * as React from 'react';
import * as PropTypes from 'prop-types';
/**
 * @hidden
 */
export interface FloatingLabelProps {
    /**
     * Specifies the value of an `input` element. Used to define if the input is empty.
     */
    value?: string;
    /**
     * Specifies the placeholder of an `input` element. Used to define if the input is empty.
     */
    placeholder?: string;
    /**
     * Specifies the validity of an `input` element. Used to define the invalid state of the input.
     */
    valid?: boolean;
    /**
     * Adds a floating label that describes the input.
     */
    label?: string;
    /**
     * Represent the [`htmlFor`](https://reactjs.org/docs/dom-elements.html#htmlfor) property, which will be set to the `label` element.
     */
    id?: string;
    /**
     * @hidden
     */
    style?: React.CSSProperties;
    /**
     * @hidden
     */
    className?: string;
    /**
     * Specifies the direction of the `k-textbox-container` element.
     */
    dir?: string;
}
/**
 * @hidden
 */
export interface FloatingLabelState {
    focused?: boolean;
}
/**
 * @hidden
 */
export default class FloatingLabel extends React.Component<FloatingLabelProps, FloatingLabelState> {
    static propTypes: {
        label: PropTypes.Requireable<string>;
        id: PropTypes.Requireable<string>;
        value: PropTypes.Requireable<string>;
        placeholder: PropTypes.Requireable<string>;
        valid: PropTypes.Requireable<boolean>;
    };
    readonly state: FloatingLabelState;
    handleFocus: (_: React.SyntheticEvent<HTMLSpanElement, Event>) => void;
    handleBlur: (_: React.SyntheticEvent<HTMLSpanElement, Event>) => void;
    render(): JSX.Element;
}
